#!/usr/bin/env bash


print_version(){
    echo "ipwarn 2.0.0"
}

print_help(){
    echo "$(print_version)"
    echo "usage:  ipwarn <flag 1> ... <flag n>"
    echo "flags:"
    echo "    ipwarn {-h --help}                    display the help (this) and exit"
    echo "    ipwarn {-v -V --version}              display the version and exit"
    echo "    ipwarn {-c --config } config-file     choose a custom location for the config file"
}

telegram(){
    result="$(curl -s -X POST "https://api.telegram.org/bot${TEL_API_TOKEN}/sendMessage" -d chat_id="${TEL_API_ID}" -d text="New ip is ${new_ip}")"
    echo "Telegram warning sent"
}

godaddy(){
    result="$(curl -s -X PUT "https://api.godaddy.com/v1/domains/${GD_DOMAIN}/records/${GD_RECORD_TYPE}/${GD_RECORD_NAME}" -H "Authorization: sso-key ${GD_API_KEY}:${GD_API_SECRET}" -H "Content-Type: application/json" -d "[{\"data\": \"${new_ip}\"}]")"
	echo "GoDaddy record updated"
}

get_config(){
    config_file="/etc/ipwarn/ipwarn.conf"

    while [ $# -gt 0 ]; do
        case "$1" in
            -c|--config)
                shift
                config_file=$1
                shift
                ;;
            *)
                break
                ;;
        esac
    done

    if [ -e "${config_file}" ]; then
        if ! source "${config_file}"; then
            echo "error reading or opening config file ${config_file}"
            exit 1
        fi
    else
        echo "error reading or opening config file ${config_file}"
        exit 1
    fi
}

main(){
    # Check if help is wanted
    if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
        print_help
        exit 0
    fi

    # Check if the user wants the version
    if [ "$1" = "-v" ] || [ "$1" = "-V" ] || [ "$1" = "--version" ]; then
        print_version
        exit 0
    fi

    get_config "$@"

    # Infinite loop that checks if the ip has changed
    while true; do
        new_ip="$(curl -s icanhazip.com)"
        if [ "${new_ip}" != "${ip}" ]; then
            ip="${new_ip}"
            echo "New ip is ${new_ip}"
            if [ "$UPDATE_TELEGRAM" = true ]; then
                telegram
            fi
            if [ "$UPDATE_GODADDY" = true ]; then
                godaddy
            fi
        fi
        sleep "${INTERVAL}"
    done
}

main "$@"
