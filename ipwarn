#!/usr/bin/env bash


help(){
    echo "usage:  ipwarn <flag 1> ... <flag n>"
    echo "flags:"
    echo "    ipwarn {-h --help}            displays this"
    echo "    ipwarn {-t --telegram}        updates GoDaddy DNS record if the IP has changed"
    echo "    ipwarn {-g --godaddy}         send message via Telegram if the IP has changed"
}

telegram(){
    result="$(curl -s -X POST "https://api.telegram.org/bot${TEL_API_TOKEN}/sendMessage" -d chat_id=${TEL_API_ID} -d text="New ip is ${new_ip}")"
    echo "Telegram warning sent" | logger
}

godaddy(){
    curl -s -X PUT "https://api.godaddy.com/v1/domains/${GD_DOMAIN}/records/${GD_RECORD_TYPE}/${GD_RECORD_NAME}" \
	    -H "Authorization: sso-key ${GD_API_KEY}:${GD_API_SECRET}" \
	    -H "Content-Type: application/json" \
	    -d "[{\"data\": \"${new_ip}\"}]"
	echo "GoDaddy record updated" | logger
}

main(){
    if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
        help
        exit 0
    fi
    if [ "$(whoami)" != "root" ]; then
        echo "This program should be executed as root. Exiting"
        exit 1
    fi
    new_ip="$(curl -s icanhazip.com)"
    
    source /etc/ipwarn.conf
    if [ "${new_ip}" != "${IP}" ]; then
        sed -i -e 's/IP="'"${IP}"'"/IP="'"${new_ip}"'"/g' /etc/ipwarn.conf
        echo "New ip is ${new_ip}"
        echo "New ip is ${new_ip}" | logger
        while [ $# -gt 0 ]; do
            case "$1" in
                -t|--telegram)
                    telegram
                    shift
                    ;;
                -g|--godaddy)
                    godaddy
                    shift
                    ;;
                *)
                    break
                    ;;
            esac
        done
    fi
}

main "$@"
